version: '3.4'

networks: 
  kong-net:

volumes:
  kong-ee-datastore:
    driver: local
    driver_opts:
      type: none
      device: $HOME/projects/docker/kong-ee
      o: bind

services:
  kong-ee:
    image: "${KONG_DOCKER_TAG:-kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:latest}"
    command: sh -c "kong migrations bootstrap && /docker-entrypoint.sh kong docker-start"
    depends_on:
      - kong-ee-db
    networks:
      - kong-net
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_LICENSE_DATA: '${KONG_LICENSE_DATA}'
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PORTAL: 'on'
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_VITALS: 'on'
    links:
      - kong-ee-db:db
    ports:
      - "8000:8000/tcp"
      - "8443:8443/tcp"
      - "8001:8001/tcp"
      - "8444:8444/tcp"
      - "8002:8002/tcp"
      - "8445:8445/tcp"
      - "8003:8003/tcp"
      - "8004:8004/tcp"
    restart: on-failure
    stdin_open: true
    tty: true
  kong-ee-db:
    image: postgres:9.5
    volumes:
      - kong-ee-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
